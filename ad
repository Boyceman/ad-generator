#! /usr/bin/env node
'use strict'
const fs = require('fs')
const path = require('path')
const exec = require('child_process').exec
const minizip = require('node-minizip')
const argv = require('yargs')
  .option('resource', {
    alias: 'r', 
    describe: 'name of directory or zip file which contain images without extension',
    demandOption: true
  })
  .option('title', {
    alias: 't', 
    describe: 'title of the web page that you want to be generated',
    demandOption: true
  })
  .option('web', {
    alias: 'w', 
    describe: 'name of the web page that you want to be generated',
    demandOption: true
  })
  .option('help', {
    alias: 'h', 
    describe: 'show help'
  })
  .argv
const dirName = argv.resource
const title = argv.title
const web = argv.web || 'web'

const dirPath = path.resolve(__dirname, dirName)
const isDir = fs.existsSync(dirPath)

if(isDir) {
  geneFile()
} else {
  minizip.unzip(`${dirPath}.zip`, './', (err)=> {
    if (err){
      console.log(err)
    } else {
      console.log('unzip successfully.')
      geneFile()
    }
  })
}

function geneFile() {
  fs.readdir(dirPath, (err, files)=>{
    const html = geneHtml(title, files)
    fs.writeFile(`${web}.html`, html, (err)=> {
      if(err)
        console.error(err)
      else
        console.log(`generate ${web}.html successfully`)
        const child = exec(`open ${web}.html`, function(err, stdout, stderr) {
          if (err) throw err;
          console.log(stdout);
        });
        const rm = exec('rm -rf __MACOSX', (err, stdout, stderr)=> {
          if(err) throw err
          console.log(stdout)
        })
      }
    )
  })
}


function geneHtml(title, arr) {
  return `<!DOCTYPE html>
    <html>
      <head>
        <title>${title}</title>
        <style>
          body{padding:0;margin:0;overflow-x:hidden;}
          .wrap{overflow:hidden;position:relative;left:50%;margin-left:-1300px;}
          img{float:left}
        </style>
      </head>
      <body>
        <div class='wrap'>
          ${insertImages(arr)}
        </div>
      </body>
    </html>`
}

function insertImages(arr){
  let images = ''
  arr.forEach((item) =>{
    if(/.(jpg|png|gif)/.test(item))
      images += `<img src="./${dirName}/${item}" />`
  })
  return images
}
